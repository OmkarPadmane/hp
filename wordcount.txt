on master

google it
   - apache hadoop wordcount program
   - then click on first link  (apache hadoop map reduce) and then click on wordcount v1.0 then the word count program will open.
   - copy the code

$ cat > WordCount.java

import java.io.IOException;
import java.util.StringTokenizer;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class WordCount {

  public static class TokenizerMapper
       extends Mapper<Object, Text, Text, IntWritable>{

    private final static IntWritable one = new IntWritable(1);
    private Text word = new Text();

    public void map(Object key, Text value, Context context
                    ) throws IOException, InterruptedException {
      StringTokenizer itr = new StringTokenizer(value.toString());
      while (itr.hasMoreTokens()) {
        word.set(itr.nextToken());
        context.write(word, one);
      }
    }
  }

  public static class IntSumReducer
       extends Reducer<Text,IntWritable,Text,IntWritable> {
    private IntWritable result = new IntWritable();

    public void reduce(Text key, Iterable<IntWritable> values,
                       Context context
                       ) throws IOException, InterruptedException {
      int sum = 0;
      for (IntWritable val : values) {
        sum += val.get();
      }
      result.set(sum);
      context.write(key, result);
    }
  }

  public static void main(String[] args) throws Exception {
    Configuration conf = new Configuration();
    Job job = Job.getInstance(conf, "word count");
    job.setJarByClass(WordCount.class);
    job.setMapperClass(TokenizerMapper.class);
    job.setCombinerClass(IntSumReducer.class);
    job.setReducerClass(IntSumReducer.class);
    job.setOutputKeyClass(Text.class);
    job.setOutputValueClass(IntWritable.class);
    FileInputFormat.addInputPath(job, new Path(args[0]));
    FileOutputFormat.setOutputPath(job, new Path(args[1]));
    System.exit(job.waitForCompletion(true) ? 0 : 1);
  }
}

-----------   the file name should be same as class name
$ stop-all.sh

cd /usr/local/hadoop/etc/hadoop

$ vim mapread-ite.xml
	(add this)

<configuration>

<property>
  <name>yarn.app.mapreduce.am.env</name>
  <value>HADOOP_MAPRED_HOME=$HADOOP_HOME</value>
</property>
<property>
  <name>mapreduce.map.env</name>
  <value>HADOOP_MAPRED_HOME=$HADOOP_HOME</value>
</property>
<property>
  <name>mapreduce.reduce.env</name>
  <value>HADOOP_MAPRED_HOME=$HADOOP_HOME</value>
</property>

</configuration>

$ start-all.sh
$ echo $(hadoop classpath)                                 
$ export HADOOP_CLASSPATH=$(hadoop classpath)       
$ javac -classpath $HADOOP_CLASSPATH WordCount.java   
$ ls
$ jar cf wc.jar WordCount*.class                     
$ cat > words.txt
	hii
	hii
	hello world
	bbye

$ jps                                   
$ hdfs dfs -mkdir /wordcount
$ hdfs dfs -mkdir /wordcount/input         
$ hdfs dfs -put words.txt /wordcount/input  
$ hadoop jar wc.jar WordCount /wordcount/input /wordcount/output      
$ start-all.sh

 hdfs dfs -ls /wordcount
 hdfs dfs -ls /wordcount/output
 hdfs dfs -cat /wordcount/output/part-r-00000

-----------------------------------------------------------------------------------
for single cluster (if error comes) in below file
        nano maapred-site.xml
           HADOOP_HOME

for multiple-cluster
         nano maapred-site.xml
            <value>$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/*:$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/lib/*</value>
         scp mapred-site.xml DN1:/usr/local/hadoop/etc/hadoop
         scp mapred-site.xml DN2:/usr/local/hadoop/etc/hadoop
         scp mapred-site.xml DN3:/usr/local/hadoop/etc/hadoop

      start-all.sh
      hadoop jar wc.jar WordCount /wordcount/input /wordcount/output   



